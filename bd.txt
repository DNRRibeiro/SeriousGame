-- Tabela: utilizadores
CREATE TABLE utilizadores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100),
    pass VARCHAR(255),
    instituicao VARCHAR(100),
    nome VARCHAR(100),
    ano INT,
    turma VARCHAR(10),
    tipo ENUM('aluno', 'professor', 'admin')
);

-- Tabela: exercicios
CREATE TABLE exercicios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(255),
    descricao TEXT,
    criador_id INT,
    data_criacao DATETIME,
    FOREIGN KEY (criador_id) REFERENCES utilizadores(id)
);

-- Tabela: perguntas
CREATE TABLE perguntas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_exercicio INT,
    texto TEXT,
    resposta TEXT,
    FOREIGN KEY (id_exercicio) REFERENCES exercicios(id)
);

-- Tabela: classificacao
CREATE TABLE classificacao (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_utilizador INT,
    pagina VARCHAR(100),
    data_hora DATETIME,
    pontos INT,
    FOREIGN KEY (id_utilizador) REFERENCES utilizadores(id)
);

-- Tabela: videos
CREATE TABLE videos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_exercicio INT,
    url TEXT,
    FOREIGN KEY (id_exercicio) REFERENCES exercicios(id)
);


INSERT INTO utilizadores (email, pass, instituicao, nome, ano, turma, tipo)
VALUES
-- Professor
('professor1@example.com', 'senha_hash_1', 'Universidade X', 'Prof. João Silva', NULL, NULL, 'professor'),

-- Aluno
('aluno1@example.com', 'senha_hash_2', 'Universidade X', 'Maria Oliveira', 2, 'A1', 'aluno'),

-- Admin
('admin1@example.com', 'senha_hash_3', 'Universidade X', 'Administrador', NULL, NULL, 'admin');

CREATE TABLE familias (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    criador_id INT,
    data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (criador_id) REFERENCES utilizadores(id)
);

ALTER TABLE exercicios
ADD id_familia INT,
ADD FOREIGN KEY (id_familia) REFERENCES familias(id);

ALTER TABLE exercicios
ADD id_familia INT,
ADD FOREIGN KEY (id_familia) REFERENCES familias(id);

ALTER TABLE perguntas ADD pontos INT DEFAULT 1;

CREATE TABLE imagens (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_exercicio INT NOT NULL,
    url TEXT NOT NULL,
    FOREIGN KEY (id_exercicio) REFERENCES exercicios(id)
);

CREATE TABLE login_log (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_utilizador INT NOT NULL,
    data_hora DATETIME DEFAULT CURRENT_TIMESTAMP,
    ip_address VARCHAR(45),
    FOREIGN KEY (id_utilizador) REFERENCES utilizadores(id)
);

ALTER TABLE exercicios ADD COLUMN ordem INT DEFAULT 0;

ALTER TABLE familias ADD COLUMN ordem INT DEFAULT 0;

ALTER TABLE classificacao ADD COLUMN id_exercicio INT;


-----------------------APAGAR----------------------------
DELETE FROM perguntas;
DELETE FROM videos;
DELETE FROM imagens;
DELETE FROM classificacao WHERE id_exercicio IN (SELECT id FROM exercicios); -- se necessário
DELETE FROM exercicios;

____________________________DB Revista____________________________
CREATE DATABASE IF NOT EXISTS pythonr;
USE pythonr;

-- Tabela: utilizadores
CREATE TABLE utilizadores (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(100),
  pass VARCHAR(255),
  instituicao VARCHAR(100),
  nome VARCHAR(100),
  ano INT,
  turma VARCHAR(10),
  tipo ENUM('aluno', 'professor', 'admin'),
  data_criacao DATETIME
);

-- Tabela: familias
CREATE TABLE familias (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(100),
  descricao TEXT,
  criador_id INT,
  data_criacao DATETIME,
  ordem INT,
  FOREIGN KEY (criador_id) REFERENCES utilizadores(id)
);

-- Tabela: exercicios
CREATE TABLE exercicios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  titulo VARCHAR(255),
  descricao TEXT,
  criador_id INT,
  id_familia INT,
  ordem INT,
  data_criacao DATETIME,
  FOREIGN KEY (criador_id) REFERENCES utilizadores(id),
  FOREIGN KEY (id_familia) REFERENCES familias(id)
);

-- Tabela: perguntas
CREATE TABLE perguntas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_exercicio INT,
  texto TEXT,
  resposta TEXT,
  pontos INT,
  FOREIGN KEY (id_exercicio) REFERENCES exercicios(id)
);

-- Tabela: imagens
CREATE TABLE imagens (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_exercicio INT,
  url TEXT,
  FOREIGN KEY (id_exercicio) REFERENCES exercicios(id)
);

-- Tabela: videos
CREATE TABLE videos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_exercicio INT,
  url TEXT,
  FOREIGN KEY (id_exercicio) REFERENCES exercicios(id)
);

-- Tabela: classificacao
CREATE TABLE classificacao (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_utilizador INT,
  id_exercicio INT,
  pontos INT,
  data_hora DATETIME,
  FOREIGN KEY (id_utilizador) REFERENCES utilizadores(id),
  FOREIGN KEY (id_exercicio) REFERENCES exercicios(id)
);

-- Tabela: inqueritos
CREATE TABLE inqueritos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_utilizador INT,
  rapidez TINYINT,
  bugs TINYINT,
  multidispositivo TINYINT,
  navegacao TINYINT,
  conteudo_util TINYINT,
  organizacao TINYINT,
  nivel_dificuldade TINYINT,
  feedback TINYINT,
  visual TINYINT,
  facilidade_localizar TINYINT,
  responder_exercicios TINYINT,
  autonomia TINYINT,
  desempenho TINYINT,
  recomendacao TINYINT,
  comentarios TEXT,
  data_resposta TIMESTAMP,
  FOREIGN KEY (id_utilizador) REFERENCES utilizadores(id)
);

-- Tabela: login_log
CREATE TABLE login_log (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_utilizador INT,
  data_hora DATETIME,
  ip_address VARCHAR(45),
  FOREIGN KEY (id_utilizador) REFERENCES utilizadores(id)
);