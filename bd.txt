____________________________DB Revista____________________________
CREATE DATABASE IF NOT EXISTS pythonr;
USE pythonr;

-- Tabela: utilizadores
CREATE TABLE utilizadores (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(100),
  pass VARCHAR(255),
  instituicao VARCHAR(100),
  nome VARCHAR(100),
  ano INT,
  turma VARCHAR(10),
  tipo ENUM('aluno', 'professor', 'admin'),
  data_criacao DATETIME
);

-- Tabela: familias
CREATE TABLE familias (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(100),
  descricao TEXT,
  criador_id INT,
  data_criacao DATETIME,
  ordem INT,
  FOREIGN KEY (criador_id) REFERENCES utilizadores(id)
);

-- Tabela: exercicios
CREATE TABLE exercicios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  titulo VARCHAR(255),
  descricao TEXT,
  criador_id INT,
  id_familia INT,
  ordem INT,
  data_criacao DATETIME,
  FOREIGN KEY (criador_id) REFERENCES utilizadores(id),
  FOREIGN KEY (id_familia) REFERENCES familias(id)
);

-- Tabela: perguntas
CREATE TABLE perguntas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_exercicio INT,
  texto TEXT,
  resposta TEXT,
  pontos INT,
  FOREIGN KEY (id_exercicio) REFERENCES exercicios(id)
);

-- Tabela: imagens
CREATE TABLE imagens (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_exercicio INT,
  url TEXT,
  FOREIGN KEY (id_exercicio) REFERENCES exercicios(id)
);

-- Tabela: videos
CREATE TABLE videos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_exercicio INT,
  url TEXT,
  FOREIGN KEY (id_exercicio) REFERENCES exercicios(id)
);

-- Tabela: classificacao
CREATE TABLE classificacao (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_utilizador INT,
  id_exercicio INT,
  pontos INT,
  data_hora DATETIME,
  FOREIGN KEY (id_utilizador) REFERENCES utilizadores(id),
  FOREIGN KEY (id_exercicio) REFERENCES exercicios(id)
);

-- Tabela: inqueritos
CREATE TABLE inqueritos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_utilizador INT,
  rapidez TINYINT,
  bugs TINYINT,
  multidispositivo TINYINT,
  navegacao TINYINT,
  conteudo_util TINYINT,
  organizacao TINYINT,
  nivel_dificuldade TINYINT,
  feedback TINYINT,
  visual TINYINT,
  facilidade_localizar TINYINT,
  responder_exercicios TINYINT,
  autonomia TINYINT,
  desempenho TINYINT,
  recomendacao TINYINT,
  comentarios TEXT,
  data_resposta TIMESTAMP,
  FOREIGN KEY (id_utilizador) REFERENCES utilizadores(id)
);

-- Tabela: login_log
CREATE TABLE login_log (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_utilizador INT,
  data_hora DATETIME,
  ip_address VARCHAR(45),
  FOREIGN KEY (id_utilizador) REFERENCES utilizadores(id)
);
